# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-02-14 10:49
from __future__ import unicode_literals

from django.db import migrations, models
from django.conf import settings
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('code', models.CharField(max_length=64)),
                ('reconcile', models.NullBooleanField()),
                ('active', models.NullBooleanField()),
                ('level', models.IntegerField(blank=True, null=True)),
                ('shortcut', models.CharField(blank=True, max_length=12, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('currency_mode', models.CharField(max_length=16)),
                ('type', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'account_account',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='AccountAccountType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('close_method', models.CharField(max_length=16)),
                ('code', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=64)),
                ('sign', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'account_account_type',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='CrmCaseSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_hours', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('name', models.CharField(max_length=64)),
                ('change_responsible', models.NullBooleanField()),
                ('note', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('complete_name', models.CharField(blank=True, max_length=256, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=64, null=True)),
                ('active', models.NullBooleanField()),
                ('allow_unlink', models.NullBooleanField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.CrmCaseSection')),
            ],
            options={
                'db_table': 'crm_case_section',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='MrpBom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_stop', models.DateField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=16, null=True)),
                ('product_uos_qty', models.FloatField(blank=True, null=True)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('product_qty', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('product_efficiency', models.FloatField()),
                ('active', models.NullBooleanField()),
                ('product_rounding', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=64, null=True)),
                ('type', models.CharField(max_length=255)),
                ('bom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.MrpBom')),
            ],
            options={
                'db_table': 'mrp_bom',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='MrpProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=64, null=True)),
                ('product_uos_qty', models.FloatField(blank=True, null=True)),
                ('product_qty', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('cycle_total', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=64)),
                ('date_planned', models.DateTimeField()),
                ('hour_total', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('bom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.MrpBom')),
            ],
            options={
                'db_table': 'mrp_production',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='MrpRouting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=8, null=True)),
                ('name', models.CharField(max_length=64)),
                ('active', models.NullBooleanField()),
            ],
            options={
                'db_table': 'mrp_routing',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ProcurementOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=64, null=True)),
                ('product_uos_qty', models.FloatField(blank=True, null=True)),
                ('procure_method', models.CharField(max_length=255)),
                ('product_qty', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('message', models.CharField(blank=True, max_length=124, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('name', models.TextField()),
                ('date_planned', models.DateTimeField()),
                ('close_move', models.NullBooleanField()),
                ('date_close', models.DateTimeField(blank=True, null=True)),
                ('priority', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('bom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.MrpBom')),
            ],
            options={
                'db_table': 'procurement_order',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=16, null=True)),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('opera_code', models.IntegerField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductCategory')),
            ],
            options={
                'db_table': 'product_category',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ProductPricelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('active', models.NullBooleanField()),
                ('type', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'product_pricelist',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ProductProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ean13', models.CharField(blank=True, max_length=13, null=True)),
                ('price_extra', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('default_code', models.CharField(blank=True, max_length=64, null=True)),
                ('name_template', models.CharField(blank=True, max_length=128, null=True)),
                ('active', models.NullBooleanField()),
                ('variants', models.CharField(blank=True, max_length=64, null=True)),
                ('price_margin', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('track_production', models.NullBooleanField()),
                ('valuation', models.CharField(max_length=16)),
                ('track_outgoing', models.NullBooleanField()),
                ('track_incoming', models.NullBooleanField()),
                ('color', models.IntegerField(blank=True, null=True)),
                ('image', models.BinaryField(blank=True, null=True)),
                ('auto_pick', models.NullBooleanField()),
                ('image_medium', models.BinaryField(blank=True, null=True)),
                ('image_small', models.BinaryField(blank=True, null=True)),
                ('hold_flag', models.NullBooleanField()),
                ('eccn', models.CharField(blank=True, max_length=10, null=True)),
                ('need_tech_validation', models.NullBooleanField()),
                ('cmcomcode', models.CharField(blank=True, max_length=10, null=True)),
                ('hold_reason', models.CharField(blank=True, max_length=30, null=True)),
                ('pick_lead_time', models.IntegerField(blank=True, null=True)),
                ('hscomcode', models.CharField(max_length=10)),
                ('opera_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_product',
                'ordering': ['default_code'],
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ProductTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warranty', models.FloatField(blank=True, null=True)),
                ('supply_method', models.CharField(null=True, blank=True, max_length=16)),
                ('list_price', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('standard_price', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('mes_type', models.CharField(blank=True, max_length=16, null=True)),
                ('description_purchase', models.TextField(blank=True, null=True)),
                ('uos_coeff', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('purchase_ok', models.NullBooleanField()),
                ('name', models.CharField(null=True, blank=True, max_length=128, verbose_name='Description')),
                ('state', models.CharField(blank=True, max_length=16, null=True)),
                ('loc_rack', models.CharField(blank=True, max_length=16, null=True)),
                ('type', models.CharField(null=True, blank=True, max_length=16)),
                ('description', models.TextField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('loc_row', models.CharField(blank=True, max_length=16, null=True)),
                ('description_sale', models.TextField(blank=True, null=True)),
                ('procure_method', models.CharField(null=True, blank=True, max_length=16)),
                ('cost_method', models.CharField(null=True, blank=True, max_length=16)),
                ('rental', models.NullBooleanField()),
                ('sale_ok', models.NullBooleanField()),
                ('sale_delay', models.FloatField(blank=True, null=True)),
                ('loc_case', models.CharField(blank=True, max_length=16, null=True)),
                ('produce_delay', models.FloatField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('weight_net', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('moisture_sensitivity', models.CharField(null=True, blank=True, max_length=1)),
                ('feeder_type', models.CharField(blank=True, max_length=16, null=True)),
                ('cycle_class', models.CharField(blank=True, max_length=1, null=True)),
                ('programmable_ic', models.NullBooleanField()),
                ('pcba_part_type', models.CharField(blank=True, max_length=32, null=True)),
                ('categ', models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductCategory')),
            ],
            options={
                'db_table': 'product_template',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ProductUom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uom_type', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=64)),
                ('rounding', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('factor', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('active', models.NullBooleanField()),
            ],
            options={
                'db_table': 'product_uom',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ProductUomCateg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'product_uom_categ',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=64, null=True)),
                ('date_order', models.DateField()),
                ('amount_untaxed', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('amount_tax', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_ref', models.CharField(blank=True, max_length=64, null=True)),
                ('date_approve', models.DateField(blank=True, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('name', models.CharField(max_length=64)),
                ('notes', models.TextField(blank=True, null=True)),
                ('invoice_method', models.CharField(max_length=255)),
                ('shipped', models.NullBooleanField()),
                ('minimum_planned_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'purchase_order',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_unit', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('product_qty', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('invoiced', models.NullBooleanField()),
                ('name', models.TextField()),
                ('date_planned', models.DateField()),
                ('state', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'purchase_order_line',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ResCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rml_footer1', models.CharField(blank=True, max_length=200, null=True)),
                ('rml_header', models.TextField()),
                ('rml_header3', models.TextField()),
                ('account_no', models.CharField(blank=True, max_length=64, null=True)),
                ('overdue_msg', models.TextField(blank=True, null=True)),
                ('schedule_range', models.FloatField()),
                ('security_lead', models.FloatField()),
                ('paper_format', models.CharField(max_length=255)),
                ('company_registry', models.CharField(blank=True, max_length=64, null=True)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('paypal_account', models.CharField(blank=True, max_length=128, null=True)),
                ('vat_check_vies', models.NullBooleanField()),
                ('po_lead', models.FloatField()),
                ('manufacturing_lead', models.FloatField()),
                ('old_partner_id', models.IntegerField(blank=True, null=True)),
                ('rml_footer', models.TextField(blank=True, null=True)),
                ('logo_web', models.BinaryField(blank=True, null=True)),
                ('custom_footer', models.NullBooleanField()),
                ('expects_chart_of_accounts', models.NullBooleanField()),
                ('tax_calculation_rounding_method', models.CharField(blank=True, max_length=255, null=True)),
                ('rml_header2', models.TextField()),
                ('rml_header1', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'res_company',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ResCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=2, null=True, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('address_format', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_country',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ResCountryState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=64)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCountry')),
            ],
            options={
                'db_table': 'res_country_state',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ResCurrency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('rounding', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('active', models.NullBooleanField()),
                ('base', models.NullBooleanField()),
                ('date', models.DateField(blank=True, null=True)),
                ('accuracy', models.IntegerField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=255, null=True)),
                ('symbol', models.CharField(blank=True, max_length=4, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany')),
            ],
            options={
                'db_table': 'res_currency',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ResPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('ean13', models.CharField(blank=True, max_length=13, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('lang', models.CharField(blank=True, max_length=5, null=True)),
                ('customer', models.NullBooleanField()),
                ('credit_limit', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(max_length=128)),
                ('employee', models.NullBooleanField()),
                ('supplier', models.NullBooleanField()),
                ('ref', models.CharField(blank=True, max_length=64, null=True)),
                ('vat', models.CharField(blank=True, max_length=32, null=True)),
                ('last_reconciliation_date', models.DateTimeField(blank=True, null=True)),
                ('debit_limit', models.FloatField(blank=True, null=True)),
                ('vat_subjected', models.NullBooleanField()),
                ('color', models.IntegerField(blank=True, null=True)),
                ('opt_out', models.NullBooleanField()),
                ('is_company', models.NullBooleanField()),
                ('birthdate', models.CharField(blank=True, max_length=64, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('street', models.CharField(blank=True, max_length=128, null=True)),
                ('street2', models.CharField(blank=True, max_length=128, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('fax', models.CharField(blank=True, max_length=64, null=True)),
                ('function', models.CharField(blank=True, max_length=128, null=True)),
                ('mobile', models.CharField(blank=True, max_length=64, null=True)),
                ('phone', models.CharField(blank=True, max_length=64, null=True)),
                ('zip', models.CharField(blank=True, max_length=24, null=True)),
                ('tz', models.CharField(blank=True, max_length=64, null=True)),
                ('email', models.CharField(blank=True, max_length=240, null=True)),
                ('image', models.BinaryField(blank=True, null=True)),
                ('image_small', models.BinaryField(blank=True, null=True)),
                ('image_medium', models.BinaryField(blank=True, null=True)),
                ('use_parent_address', models.NullBooleanField()),
                ('website', models.CharField(blank=True, max_length=64, null=True)),
                ('notification_email_send', models.CharField(max_length=255)),
                ('signup_type', models.CharField(blank=True, max_length=255, null=True)),
                ('signup_expiration', models.DateTimeField(blank=True, null=True)),
                ('signup_token', models.CharField(blank=True, max_length=255, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_account_no', models.CharField(blank=True, max_length=16, null=True)),
                ('export_license', models.CharField(blank=True, max_length=64, null=True)),
                ('attn_to', models.CharField(blank=True, max_length=128, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCountry')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResPartner')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.CrmCaseSection')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCountryState')),
            ],
            options={
                'db_table': 'res_partner',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=24)),
                ('name', models.CharField(max_length=46)),
                ('shortcut', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'res_partner_title',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='ResUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('active', models.NullBooleanField()),
                ('login', models.CharField(max_length=64, unique=True)),
                ('email', models.CharField(blank=True, max_length=64, null=True)),
                ('context_tz', models.CharField(blank=True, max_length=64, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('context_lang', models.CharField(blank=True, max_length=64, null=True)),
                ('menu_id', models.IntegerField(blank=True, null=True)),
                ('menu_tips', models.NullBooleanField()),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('screen_pop', models.NullBooleanField()),
                ('email_from', models.CharField(blank=True, max_length=255, null=True)),
                ('login_date', models.DateField(blank=True, null=True)),
                ('password_crypt', models.CharField(blank=True, max_length=255, null=True)),
                ('share', models.NullBooleanField()),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='res_users_address', to='metrics.ResPartner')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany')),
                ('default_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.CrmCaseSection')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='res_users_partner', to='metrics.ResPartner')),
            ],
            options={
                'db_table': 'res_users',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='SaleOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=64, null=True)),
                ('order_policy', models.CharField(max_length=255)),
                ('client_order_ref', models.CharField(blank=True, max_length=64, null=True)),
                ('date_order', models.DateField()),
                ('note', models.TextField(blank=True, null=True)),
                ('amount_tax', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_untaxed', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('date_confirm', models.DateField(blank=True, null=True)),
                ('amount_total', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('name', models.CharField(max_length=64)),
                ('invoice_quantity', models.CharField(max_length=255)),
                ('picking_policy', models.CharField(max_length=255)),
                ('shipped', models.NullBooleanField()),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany')),
            ],
            options={
                'db_table': 'sale_order',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='SaleOrderLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_uos_qty', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('price_unit', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('product_uom_qty', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('discount', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('name', models.TextField()),
                ('state', models.CharField(max_length=255)),
                ('th_weight', models.FloatField(blank=True, null=True)),
                ('invoiced', models.NullBooleanField()),
                ('type', models.CharField(max_length=255)),
                ('delay', models.FloatField()),
                ('address_allotment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_line_address_allotment', to='metrics.ResPartner')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.SaleOrder')),
                ('order_partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_line_order_partner', to='metrics.ResPartner')),
                ('procurement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ProcurementOrder')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductProduct')),
                ('product_uom', models.ForeignKey(db_column='product_uom', on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_line_product_uom', to='metrics.ProductUom')),
                ('product_uos', models.ForeignKey(blank=True, db_column='product_uos', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_line_product_uos', to='metrics.ProductUom')),
                ('salesman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResUsers')),
            ],
            options={
                'db_table': 'sale_order_line',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='StockIncoterms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.NullBooleanField()),
                ('code', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'stock_incoterms',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='StockLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_left', models.IntegerField(blank=True, null=True)),
                ('parent_right', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('chained_delay', models.IntegerField(blank=True, null=True)),
                ('active', models.NullBooleanField()),
                ('posz', models.IntegerField(blank=True, null=True)),
                ('posx', models.IntegerField(blank=True, null=True)),
                ('posy', models.IntegerField(blank=True, null=True)),
                ('icon', models.CharField(blank=True, max_length=64, null=True)),
                ('scrap_location', models.NullBooleanField()),
                ('name', models.CharField(max_length=64)),
                ('chained_picking_type', models.CharField(blank=True, max_length=255, null=True)),
                ('chained_auto_packing', models.CharField(max_length=255)),
                ('complete_name', models.CharField(blank=True, max_length=256, null=True)),
                ('usage', models.CharField(max_length=255)),
                ('chained_location_type', models.CharField(max_length=255)),
                ('chained_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_location_chained_company', to='metrics.ResCompany')),
                ('chained_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_location_chained_location', to='metrics.StockLocation')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_location_company', to='metrics.ResCompany')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_location_location', to='metrics.StockLocation')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResPartner')),
                ('valuation_in_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_location_valuation_in_account', to='metrics.AccountAccount')),
                ('valuation_out_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_location_valuation_out_account', to='metrics.AccountAccount')),
            ],
            options={
                'db_table': 'stock_location',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='StockMove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=64, null=True)),
                ('product_uos_qty', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('date_expected', models.DateTimeField()),
                ('price_unit', models.DecimalField(blank=True, decimal_places=10, max_digits=1000, null=True)),
                ('date', models.DateTimeField()),
                ('product_qty', models.DecimalField(decimal_places=10, max_digits=1000)),
                ('name', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('auto_validate', models.NullBooleanField()),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_move_location', to='metrics.StockLocation')),
                ('location_dest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_move_location_dest', to='metrics.StockLocation')),
                ('move_dest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockMove')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResPartner')),
            ],
            options={
                'db_table': 'stock_move',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='StockPicking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(blank=True, max_length=64, null=True)),
                ('date_done', models.DateTimeField(blank=True, null=True)),
                ('min_date', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('move_type', models.CharField(max_length=255)),
                ('invoice_state', models.CharField(max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('max_date', models.DateTimeField(blank=True, null=True)),
                ('auto_picking', models.NullBooleanField()),
                ('type', models.CharField(max_length=255)),
                ('backorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockPicking')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_picking_location', to='metrics.StockLocation')),
                ('location_dest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_picking_location_dest', to='metrics.StockLocation')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResPartner')),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.PurchaseOrder')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.SaleOrder')),
            ],
            options={
                'db_table': 'stock_picking',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.CreateModel(
            name='StockWarehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany')),
                ('lot_input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_warehouse_lot_input', to='metrics.StockLocation')),
                ('lot_output', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_warehouse_lot_output', to='metrics.StockLocation')),
                ('lot_stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_warehouse_lot_stock', to='metrics.StockLocation')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResPartner')),
            ],
            options={
                'db_table': 'stock_warehouse',
                'managed': settings.IS_TESTING,
            },
        ),
        migrations.AddField(
            model_name='stockmove',
            name='picking',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockPicking'),
        ),
        migrations.AddField(
            model_name='stockmove',
            name='price_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCurrency'),
        ),
        migrations.AddField(
            model_name='stockmove',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductProduct'),
        ),
        migrations.AddField(
            model_name='stockmove',
            name='product_uom',
            field=models.ForeignKey(db_column='product_uom', on_delete=django.db.models.deletion.CASCADE, related_name='stock_move_product_uom', to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='stockmove',
            name='product_uos',
            field=models.ForeignKey(blank=True, db_column='product_uos', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_move_product_uos', to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='stockmove',
            name='production',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.MrpProduction'),
        ),
        migrations.AddField(
            model_name='stockmove',
            name='purchase_line',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.PurchaseOrderLine'),
        ),
        migrations.AddField(
            model_name='stockmove',
            name='sale_line',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.SaleOrderLine'),
        ),
        migrations.AddField(
            model_name='saleorder',
            name='incoterm',
            field=models.ForeignKey(blank=True, db_column='incoterm', null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockIncoterms'),
        ),
        migrations.AddField(
            model_name='saleorder',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_partner', to='metrics.ResPartner'),
        ),
        migrations.AddField(
            model_name='saleorder',
            name='partner_invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_partner_invoice', to='metrics.ResPartner'),
        ),
        migrations.AddField(
            model_name='saleorder',
            name='partner_shipping',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_partner_shipping', to='metrics.ResPartner'),
        ),
        migrations.AddField(
            model_name='saleorder',
            name='pricelist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductPricelist'),
        ),
        migrations.AddField(
            model_name='saleorder',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.CrmCaseSection'),
        ),
        migrations.AddField(
            model_name='saleorder',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResUsers'),
        ),
        migrations.AddField(
            model_name='respartner',
            name='title',
            field=models.ForeignKey(blank=True, db_column='title', null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResPartnerTitle'),
        ),
        migrations.AddField(
            model_name='respartner',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResUsers'),
        ),
        migrations.AddField(
            model_name='rescountry',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCurrency'),
        ),
        migrations.AddField(
            model_name='rescompany',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCurrency'),
        ),
        migrations.AddField(
            model_name='rescompany',
            name='expense_currency_exchange_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='res_company_expense_currency_exchange_account', to='metrics.AccountAccount'),
        ),
        migrations.AddField(
            model_name='rescompany',
            name='income_currency_exchange_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='res_company_income_currency_exchange_account', to='metrics.AccountAccount'),
        ),
        migrations.AddField(
            model_name='rescompany',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='rescompany',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResPartner'),
        ),
        migrations.AddField(
            model_name='rescompany',
            name='project_time_mode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='purchaseorderline',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='purchaseorderline',
            name='move_dest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockMove'),
        ),
        migrations.AddField(
            model_name='purchaseorderline',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.PurchaseOrder'),
        ),
        migrations.AddField(
            model_name='purchaseorderline',
            name='partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResPartner'),
        ),
        migrations.AddField(
            model_name='purchaseorderline',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductProduct'),
        ),
        migrations.AddField(
            model_name='purchaseorderline',
            name='product_uom',
            field=models.ForeignKey(db_column='product_uom', on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='dest_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchase_order_dest_address', to='metrics.ResPartner'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.StockLocation'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_order_partner', to='metrics.ResPartner'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='pricelist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductPricelist'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='validator',
            field=models.ForeignKey(blank=True, db_column='validator', null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResUsers'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='warehouse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockWarehouse'),
        ),
        migrations.AddField(
            model_name='productuom',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductUomCateg'),
        ),
        migrations.AddField(
            model_name='producttemplate',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='producttemplate',
            name='product_manager',
            field=models.ForeignKey(blank=True, db_column='product_manager', null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResUsers'),
        ),
        migrations.AddField(
            model_name='producttemplate',
            name='uom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductUom', verbose_name='UOM'),
        ),
        migrations.AddField(
            model_name='productproduct',
            name='product_tmpl',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductTemplate', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='productpricelist',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='productpricelist',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCurrency'),
        ),
        migrations.AddField(
            model_name='procurementorder',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='procurementorder',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.StockLocation'),
        ),
        migrations.AddField(
            model_name='procurementorder',
            name='move',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockMove'),
        ),
        migrations.AddField(
            model_name='procurementorder',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductProduct'),
        ),
        migrations.AddField(
            model_name='procurementorder',
            name='product_uom',
            field=models.ForeignKey(db_column='product_uom', on_delete=django.db.models.deletion.CASCADE, related_name='procurement_order_product_uom', to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='procurementorder',
            name='product_uos',
            field=models.ForeignKey(blank=True, db_column='product_uos', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='procurement_order_product_uos', to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='procurementorder',
            name='production',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.MrpProduction'),
        ),
        migrations.AddField(
            model_name='procurementorder',
            name='purchase',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.PurchaseOrder'),
        ),
        migrations.AddField(
            model_name='mrprouting',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='mrprouting',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockLocation'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='location_dest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mrp_production_location_dest', to='metrics.StockLocation'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='location_src',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mrp_production_location_src', to='metrics.StockLocation'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='move_prod',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockMove'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='picking',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.StockPicking'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductProduct'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='product_uom',
            field=models.ForeignKey(db_column='product_uom', on_delete=django.db.models.deletion.CASCADE, related_name='mrp_production_product_uom', to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='product_uos',
            field=models.ForeignKey(blank=True, db_column='product_uos', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mrp_production_product_uos', to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='routing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.MrpRouting'),
        ),
        migrations.AddField(
            model_name='mrpproduction',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResUsers'),
        ),
        migrations.AddField(
            model_name='mrpbom',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='mrpbom',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ProductProduct'),
        ),
        migrations.AddField(
            model_name='mrpbom',
            name='product_uom',
            field=models.ForeignKey(db_column='product_uom', on_delete=django.db.models.deletion.CASCADE, related_name='bom_product_uom', to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='mrpbom',
            name='product_uos',
            field=models.ForeignKey(blank=True, db_column='product_uos', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bom_product_uos', to='metrics.ProductUom'),
        ),
        migrations.AddField(
            model_name='mrpbom',
            name='routing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.MrpRouting'),
        ),
        migrations.AddField(
            model_name='crmcasesection',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResUsers'),
        ),
        migrations.AddField(
            model_name='accountaccount',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCompany'),
        ),
        migrations.AddField(
            model_name='accountaccount',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.ResCurrency'),
        ),
        migrations.AddField(
            model_name='accountaccount',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='metrics.AccountAccount'),
        ),
        migrations.AddField(
            model_name='accountaccount',
            name='user_type',
            field=models.ForeignKey(db_column='user_type', on_delete=django.db.models.deletion.CASCADE, to='metrics.AccountAccountType'),
        ),
        migrations.AlterUniqueTogether(
            name='stockpicking',
            unique_together=set([('name', 'company')]),
        ),
        migrations.AlterUniqueTogether(
            name='saleorder',
            unique_together=set([('name', 'company')]),
        ),
        migrations.AlterUniqueTogether(
            name='purchaseorder',
            unique_together=set([('name', 'company')]),
        ),
        migrations.AlterUniqueTogether(
            name='mrpproduction',
            unique_together=set([('name', 'company')]),
        ),
        migrations.AlterUniqueTogether(
            name='accountaccount',
            unique_together=set([('code', 'company')]),
        ),
    ]
